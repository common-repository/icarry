let ICarryShippingForWooCommerce={emailField:null,passwordField:null,validateConnectivityFields:()=>{let e=!0;return null!==ICarryShippingForWooCommerce.emailField&&null!==ICarryShippingForWooCommerce.passwordField&&(ICarryShippingForWooCommerce.emailField.classList.remove("invalid"),ICarryShippingForWooCommerce.passwordField.classList.remove("invalid"),ICarryShippingForWooCommerce.emailField.value=ICarryShippingForWooCommerce.emailField.value.replace(/\s/g,""),ICarryShippingForWooCommerce.passwordField.value=ICarryShippingForWooCommerce.passwordField.value.replace(/\s/g,""),""===ICarryShippingForWooCommerce.emailField.value&&(ICarryShippingForWooCommerce.emailField.classList.add("invalid"),e=!1),""===ICarryShippingForWooCommerce.passwordField.value&&(ICarryShippingForWooCommerce.passwordField.classList.add("invalid"),e=!1)),e},checkConnectivity:e=>{if(console.log("checkConnectivity"),ICarryShippingForWooCommerce.validateConnectivityFields()){var o=new FormData;o.append("action","icarry_shipping_for_woocommerce_check_connectivity_fetch_request"),o.append("nonce",ICarryShippingForWooCommerceVariables.nonce),o.append("email",ICarryShippingForWooCommerce.emailField.value),o.append("password",ICarryShippingForWooCommerce.passwordField.value),ICarryShippingForWooCommerce.successMessage.hide(),ICarryShippingForWooCommerce.errorMessage.hide(),e.querySelector("i").classList.add("show"),fetch(ICarryShippingForWooCommerceVariables.AjaxUrl,{method:"POST",body:o,headers:{Accept:"application/json"}}).then((e=>e.json())).then((e=>{console.log("response",e),e.type&&("success"==e.type&&ICarryShippingForWooCommerce.successMessage.show(),"error"==e.type&&ICarryShippingForWooCommerce.errorMessage.show())})).catch((e=>{console.error(e)})).finally((()=>{e.querySelector("i").classList.remove("show")}))}},errorMessage:{show:()=>{document.querySelector("#icarry_shipping_for_woocommerce_check_connectivity_error_message").classList.add("show")},hide:()=>{document.querySelector("#icarry_shipping_for_woocommerce_check_connectivity_error_message").classList.remove("show")}},successMessage:{show:()=>{document.querySelector("#icarry_shipping_for_woocommerce_check_connectivity_success_message").classList.add("show")},hide:()=>{document.querySelector("#icarry_shipping_for_woocommerce_check_connectivity_success_message").classList.remove("show")}},insertCheckConnectivityButton:()=>{if(null!==ICarryShippingForWooCommerce.passwordField){let e='<tr valig ="top"><th scope="row" class="titledesc"></th><td class="forminp"><div id="icarry_shipping_for_woocommerce_check_connectivity_error_message" class="check-connectivity-message error-message"><i class="dashicons dashicons-dismiss"></i><span>Connection error. Please check your credentials.</span></div><div id="icarry_shipping_for_woocommerce_check_connectivity_success_message" class="check-connectivity-message success-message"><i class="dashicons dashicons-yes-alt"></i><span>Connection successful.</span></div><button class="check-connectivity-button" type="button" onclick="ICarryShippingForWooCommerce.checkConnectivity(this)"><i class="dashicons dashicons-update rotating"></i>Check Connectivity</button></td></tr>';ICarryShippingForWooCommerce.passwordField.closest("tr").insertAdjacentHTML("afterend",e)}},icarry_init:()=>{ICarryShippingForWooCommerce.emailField=document.querySelector("#woocommerce_icarry_shipping_for_woocommerce_email"),ICarryShippingForWooCommerce.passwordField=document.querySelector("#woocommerce_icarry_shipping_for_woocommerce_password"),ICarryShippingForWooCommerce.insertCheckConnectivityButton()}};window.addEventListener("load",(()=>{ICarryShippingForWooCommerce.icarry_init()}),!1);

console.log('js.min.js is loaded2');
jQuery(document).ready(function(e){e('#billing_country').val('');e('#shipping_country').val('');e("#billing_country, #shipping_country").on("change",function(){var n=e(this).val();console.log("Country selected: "+n);var t=e(this).attr('id')==='billing_country'?e('#billing_city'):e('#shipping_city');console.log("City select field located."),t.empty().append(e("<option>").text("Loading cities...")),console.log("City dropdown cleared."),e.ajax({url:icarry_ajax_object.ajax_url,type:"POST",dataType:"json",data:{action:"icarry_get_states_by_country",countryIsoCode:n,nonce:icarry_ajax_object.nonce},beforeSend:function(){console.log("Making AJAX request to: "+icarry_ajax_object.ajax_url)},success:function(n){if(console.log("AJAX request successful."),console.log("Response received:",n),n.success&&n.data){t.empty().append(e("<option>").text("Select a city")),console.log("Dropdown reset to default."),e.each(n.data,function(n,o){t.append(e("<option>").val(o.name).text(o.name)),console.log("Added city: "+o.name)}),console.log("City dropdown populated with states.")}else console.error("Error in AJAX response:",n),t.empty().append(e("<option>").text("No cities available"))},error:function(e,n,o){console.error("AJAX request failed:",n,o),t.empty().append(e("<option>").text("Error loading cities"))}})})});